{"version":3,"sources":["components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.ModelTransformer/Snap.Command/Snap.Command.js","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.ModelTransformer/Snap.Command/index.js","components/Viewer.Components/Viewer.Command/Viewer.Command.Tool.js","components/Viewer.Components/Viewer.Command/Viewer.Command.js","components/Viewer.Components/Viewer.Command/index.js"],"names":["RotateCommand","viewer","options","arguments","length","undefined","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","objectSpread","commandId","fullTransform","clearSelection","ViewerCommand","Command","CommandTool","_this","toolName","toolController","registerTool","assertThisInitialized","active","activateTool","emit","deactivateTool","deactivate","off","deregisterTool","event","button","keyCode","EventsEmitter","commandTool","on","tool","activate","onActivate","onDeactivate","control","parentControl","removeControl","unregister","id","className","tooltip","handler","Autodesk","Viewing","UI","Button","icon","style","fontSize","setToolTip","onClick","createButton","caption","viewerToolbar","getToolbar","ControlGroup","addControl"],"mappings":"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","file":"static/js/14.82010c23.chunk.js","sourcesContent":["import ViewerCommand from 'Viewer.Command'\n\nexport default class RotateCommand extends ViewerCommand {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super (viewer, {\n      ...options,\n      commandId: 'Snap'\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // \n  //\n  /////////////////////////////////////////////////////////\n  setFullTransform (fullTransform) {\n\n    this.fullTransform = fullTransform\n\n    this.clearSelection()\n  }\n}\n\n\n","import Command from './Snap.Command'\n\nexport default Command\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class CommandTool extends EventsEmitter {\n\n  constructor (viewer, options = {}) {\n\n    super ()\n\n    this.toolName = options.commandId\n\n    viewer.toolController.registerTool(this)\n\n    this.options = options\n\n    this.viewer = viewer\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Tool names\n  //\n  /////////////////////////////////////////////////////////////////\n  getNames () {\n\n    return [this.toolName]\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Tool name\n  //\n  /////////////////////////////////////////////////////////////////\n  getName () {\n\n    return this.toolName\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /////////////////////////////////////////////////////////////////\n  activate () {\n\n    if (!this.active) {\n\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.active) {\n\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // \n  //\n  /////////////////////////////////////////////////////////////////\n  unregister () {\n\n    this.deactivate ()\n\n    this.off()\n\n    this.viewer.toolController.deregisterTool(this)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n\n    return this.emit('singleclick', event, button)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleMouseMove (event) {\n\n    return this.emit('mousemove', event)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleKeyUp (event, keyCode) {\n\n    return this.emit('keyup', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleButtonDown (event, keyCode) {\n\n    return this.emit('buttondown', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleButtonUp (event, keyCode) {\n\n    return this.emit('buttonup', event, keyCode)\n  }\n}\n","import CommandTool from './Viewer.Command.Tool'\nimport EventsEmitter from 'EventsEmitter'\n\nexport default class ViewerCommand extends EventsEmitter {\n\n  constructor (viewer, options = {}) {\n\n    super ()\n\n    this.commandTool = new CommandTool(viewer, options)\n\n    this.commandTool.on('activate', (tool) => {\n\n      this.emit('command.activate', this)\n    })\n\n    this.commandTool.on('deactivate', (tool) => {\n\n      this.emit('command.deactivate', this)\n    })\n\n    this.commandId = options.commandId\n\n    this.options = options\n\n    this.viewer = viewer\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  get active () {\n\n    return this.commandTool.active \n  }\n  \n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  activate () {\n\n    if (!this.commandTool.active) {\n\n      this.commandTool.activate()\n\n      this.onActivate()\n    }\n  }\n\n  onActivate () {\n\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.commandTool.active) {\n\n      this.commandTool.deactivate()\n\n      this.onDeactivate()\n    }\n  }\n\n  onDeactivate () {\n    \n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  terminate () {\n\n    if (this.control) {\n      this.options.parentControl.removeControl(\n        this.control)\n    }\n\n    this.commandTool.unregister()\n     \n    this.off()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  toggle () {\n\n    this.active\n    ? this.deactivate()\n    : this.activate()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  createButton(id, className, tooltip, handler) {\n\n    const button = new Autodesk.Viewing.UI.Button(id)\n\n    button.icon.style.fontSize = '24px'\n\n    button.icon.className = className\n\n    button.setToolTip(tooltip)\n\n    button.onClick = handler\n\n    return button\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  createButtonControl (options) {\n\n    const control = this.createButton(\n      options.id,\n      options.icon,\n      options.caption,\n      options.handler)\n\n    var parentControl = options.parentControl\n\n    if (!parentControl) {\n\n      const viewerToolbar = this.viewer.getToolbar(true)\n\n      parentControl = new Autodesk.Viewing.UI.ControlGroup(\n        options.id)\n\n      viewerToolbar.addControl(parentControl)\n    }\n\n    parentControl.addControl(control)\n\n    return control\n  }\n}\n","import ViewerCommand from './Viewer.Command'\n\nexport default ViewerCommand\n"],"sourceRoot":""}