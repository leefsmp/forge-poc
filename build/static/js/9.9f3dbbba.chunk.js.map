{"version":3,"sources":["components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.ConfigManager/ConfigManager.Command/ConfigManager.Command.js","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.ConfigManager/ConfigManager.Command/index.js","components/Viewer.Components/Viewer.Command/Viewer.Command.Tool.js","components/Viewer.Components/Viewer.Command/Viewer.Command.js","components/Viewer.Components/Viewer.Command/index.js"],"names":["ConfigManagerCommand","viewer","_this","options","arguments","length","undefined","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","objectSpread","commandId","parentControl","control","createButtonControl","caption","icon","id","handler","commandTool","active","deactivate","activate","on","container","classList","add","emit","remove","event","keyCode","ViewerCommand","Command","CommandTool","toolName","toolController","registerTool","assertThisInitialized","activateTool","deactivateTool","off","deregisterTool","button","EventsEmitter","tool","onActivate","onDeactivate","removeControl","unregister","className","tooltip","Autodesk","Viewing","UI","Button","style","fontSize","setToolTip","onClick","createButton","viewerToolbar","getToolbar","ControlGroup","addControl"],"mappings":"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","file":"static/js/9.9f3dbbba.chunk.js","sourcesContent":["import ViewerCommand from 'Viewer.Command'\n\nexport default class ConfigManagerCommand extends ViewerCommand {\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super (viewer, {\n      ...options,\n      commandId: 'ConfigManager'\n    })\n\n    if (options.parentControl) {\n\n      this.control = this.createButtonControl({\n        parentControl: options.parentControl,\n        caption: 'Configurations',\n        icon: 'toolbar-ff fa fa-server',\n        id: 'toolbar-config',\n        handler: () => {\n          this.commandTool.active\n            ? this.commandTool.deactivate()\n            : this.commandTool.activate()\n        }\n      })\n    }\n    \n    this.commandTool.on('activate', () => {\n      if (this.control) {\n        this.control.container.classList.add('active')\n      }\n      this.emit('activate')\n    })\n\n    this.commandTool.on('deactivate', () => {\n      if (this.control) {\n        this.control.container.classList.remove('active')\n      }\n      this.emit('deactivate')\n    })\n\n    this.commandTool.on('keydown', (event, keyCode) => {\n\n    })\n  }\n}\n\n\n","import Command from './ConfigManager.Command'\n\nexport default Command\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class CommandTool extends EventsEmitter {\n\n  constructor (viewer, options = {}) {\n\n    super ()\n\n    this.toolName = options.commandId\n\n    viewer.toolController.registerTool(this)\n\n    this.options = options\n\n    this.viewer = viewer\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Tool names\n  //\n  /////////////////////////////////////////////////////////////////\n  getNames () {\n\n    return [this.toolName]\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Tool name\n  //\n  /////////////////////////////////////////////////////////////////\n  getName () {\n\n    return this.toolName\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /////////////////////////////////////////////////////////////////\n  activate () {\n\n    if (!this.active) {\n\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.active) {\n\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // \n  //\n  /////////////////////////////////////////////////////////////////\n  unregister () {\n\n    this.deactivate ()\n\n    this.off()\n\n    this.viewer.toolController.deregisterTool(this)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n\n    return this.emit('singleclick', event, button)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleMouseMove (event) {\n\n    return this.emit('mousemove', event)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleKeyUp (event, keyCode) {\n\n    return this.emit('keyup', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleButtonDown (event, keyCode) {\n\n    return this.emit('buttondown', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleButtonUp (event, keyCode) {\n\n    return this.emit('buttonup', event, keyCode)\n  }\n}\n","import CommandTool from './Viewer.Command.Tool'\nimport EventsEmitter from 'EventsEmitter'\n\nexport default class ViewerCommand extends EventsEmitter {\n\n  constructor (viewer, options = {}) {\n\n    super ()\n\n    this.commandTool = new CommandTool(viewer, options)\n\n    this.commandTool.on('activate', (tool) => {\n\n      this.emit('command.activate', this)\n    })\n\n    this.commandTool.on('deactivate', (tool) => {\n\n      this.emit('command.deactivate', this)\n    })\n\n    this.commandId = options.commandId\n\n    this.options = options\n\n    this.viewer = viewer\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  get active () {\n\n    return this.commandTool.active \n  }\n  \n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  activate () {\n\n    if (!this.commandTool.active) {\n\n      this.commandTool.activate()\n\n      this.onActivate()\n    }\n  }\n\n  onActivate () {\n\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.commandTool.active) {\n\n      this.commandTool.deactivate()\n\n      this.onDeactivate()\n    }\n  }\n\n  onDeactivate () {\n    \n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  terminate () {\n\n    if (this.control) {\n      this.options.parentControl.removeControl(\n        this.control)\n    }\n\n    this.commandTool.unregister()\n     \n    this.off()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  toggle () {\n\n    this.active\n    ? this.deactivate()\n    : this.activate()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  createButton(id, className, tooltip, handler) {\n\n    const button = new Autodesk.Viewing.UI.Button(id)\n\n    button.icon.style.fontSize = '24px'\n\n    button.icon.className = className\n\n    button.setToolTip(tooltip)\n\n    button.onClick = handler\n\n    return button\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  createButtonControl (options) {\n\n    const control = this.createButton(\n      options.id,\n      options.icon,\n      options.caption,\n      options.handler)\n\n    var parentControl = options.parentControl\n\n    if (!parentControl) {\n\n      const viewerToolbar = this.viewer.getToolbar(true)\n\n      parentControl = new Autodesk.Viewing.UI.ControlGroup(\n        options.id)\n\n      viewerToolbar.addControl(parentControl)\n    }\n\n    parentControl.addControl(control)\n\n    return control\n  }\n}\n","import ViewerCommand from './Viewer.Command'\n\nexport default ViewerCommand\n"],"sourceRoot":""}