{"version":3,"sources":["components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/PointCloudMarkup/index.js","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/PointCloudMarkupItem.js","components/Viewer.Components/Viewer.EventTool/index.js","components/Viewer.Components/Viewer.EventTool/Viewer.EventTool.js","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/Viewing.Extension.PointCloudMarkup.js","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/index.js","components/Viewer.Components/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","components/Viewer.Components/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/components/WidgetContainer/WidgetContainer.scss?3736","components/WidgetContainer/WidgetContainer.scss","components/WidgetContainer/WidgetContainer.js","components/WidgetContainer/index.js","webpack:///./src/components/Label/Label.scss?5660","components/Label/Label.scss","components/Label/Label.js","components/Label/index.js","components/Switch/Switch.js","components/Switch/index.js","webpack:///./src/components/Switch/Switch.scss?2095","components/Switch/Switch.scss","webpack:///./src/components/Viewer.Components/Viewer.Tooltip/Viewer.Tooltip.scss?acde","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/PointCloudMarkup/texture.png","components/Viewer.Components/Viewer.Tooltip/index.js","components/Viewer.Components/Viewer.Tooltip/Viewer.Tooltip.js","components/Viewer.Components/Viewer.Tooltip/Viewer.Tooltip.scss","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/PointCloudMarkup/PointCloudMarkup.js","webpack:///./src/components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/Viewing.Extension.PointCloudMarkup.scss?5f1b","components/Viewer.Components/Extensions/Dynamic/Viewing.Extension.PointCloudMarkup/Viewing.Extension.PointCloudMarkup.scss"],"names":["__webpack_require__","r","__webpack_exports__","_PointCloudMarkup__WEBPACK_IMPORTED_MODULE_0__","PointCloudMarkup","PointCloudMarkupItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNameChanged","bind","assertThisInitialized","onIconClicked","onClick","state","name","markup","id","e","target","value","setState","_this2","react_default","a","createElement","Popover","className","title","onChange","placeholder","rc_slider_es","handle","onSliderChanged","defaultValue","size","max","step","min","Switch","checked","onVisible","visible","onOcclusion","occlusion","dragging","offset","onSizeChanged","es","prefixCls","overlay","placement","Handle","animation","stopPropagation","_this3","style","clr","color","background","concat","x","y","z","border","backgroundImage","defaultTex","getStyle","_this4","onMouseEnter","onMouseLeave","renderIcon","Label","text","onRemove","OverlayTrigger","trigger","renderMarkupSettings","onExited","onHideSettings","rootClose","Component","EventTool","viewer","toolName","guid","toolController","registerTool","getName","active","activateTool","emit","deactivateTool","deactivate","off","deregisterTool","event","button","keyCode","EventsEmitter","PointCloudMarkupExtension","options","onMarkupSettingsChanged","onMarkupSizeChanged","onMarkupNameChanged","onMarkupOcclusion","onMarkupsUpdated","onMarkupRemoved","onMarkupClicked","onMarkupVisible","onClearMarkups","onMouseMove","onActivate","animate","tooltip","ViewerTooltip","stroke","fill","tooltipMousePos","setContent","dialogSvc","ServiceManager","getService","eventTool","react","removeTooltipIds","runAnimation","setProgressiveRendering","setGhosting","_this$options$pointCl","pointCloudMarkup","activated","showLoader","markups","then","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","readonly","pushRenderExtension","activeModel","model","onObjectTreeCreated","stop","console","log","popRenderExtension","destroy","terminate","get","prototype","on","activate","run","startAnimation","stopAnimation","loop","t","window","requestAnimationFrame","update","_this$react$getState","getState","pos","clientX","clientY","getSelection","length","currentPanelId","clearTimeout","popViewerPanel","displayMarkupTooltip","Math","sqrt","panelId","setTimeout","element","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","height","offsetHeight","width","offsetWidth","renderable","render","src","bounds","getBounds","container","pushViewerPanel","displayMode","resizeable","draggable","hitTest","clientToWorld","canvasX","canvasY","markupInfo","fragId","point","dbId","addMarkup","immediate","restoreState","onCameraTransitionCompleted","_this5","removeEventListener","Autodesk","Viewing","CAMERA_TRANSITION_COMPLETED","addEventListener","markupId","setMarkupData","setMarkupSize","setMarkupVisibility","setMarkupOcclusion","removeMarkup","clearMarkups","_this6","rgb","showCancel","content","lib","onChangeComplete","c","onColorPicked","open","_color$rgb","g","b","setMarkupColor","THREE","Vector4","hover","_this7","_this$react$getState2","items","map","PointCloudMarkupItem_PointCloudMarkupItem","onMarkupItemHover","onColorPick","key","_this$react$getState3","renderSettings","opts","arguments","undefined","showTitle","WidgetContainer","renderTitle","Loader","show","renderMarkups","MultiModelExtensionBase","theExtensionManager","registerExtension","ExtensionId","defaultOptions","onModelCompletedLoad","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onLoadNodeProperties","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","models","impl","modelQueue","getModels","objectSpread","initializeEvents","contextMenu","onContextMenu","addHandler","removeHandler","viewerEvents","forEach","handler","eventSink","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","_ref","properties","onLoadNodeProperties","toConsumableArray","filter","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","controlledSelection","push","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","eventTasks","Array","isArray","Promise","resolve","__handler","all","emitAcc","Composer","Extension","module","i","hmr","transform","insertInto","locals","exports","dimensions","React","Children","children","child","newProps","assign","cloneElement","classNames","split","join","renderChildren","PureComponent","textAlign","DOMPurify","sanitize","defineProperty","disabled","toggle","ref","type","p","_Viewer_Tooltip__WEBPACK_IMPORTED_MODULE_0__","_Users_philippe_Dropbox_projects_leefsmp_forge_poc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_philippe_Dropbox_projects_leefsmp_forge_poc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_philippe_Dropbox_projects_leefsmp_forge_poc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_Users_philippe_Dropbox_projects_leefsmp_forge_poc_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","_Users_philippe_Dropbox_projects_leefsmp_forge_poc_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","$","tooltipSelector","css","display","markerId","svgId","htmlMarker","append","$marker","pointer","createPointer","timeout","circle","Snap","paper","attr","fillOpacity","strokeWidth","opacity","animateId","mina","easein","pointerVisible","animatePointer","html","selector","velocity","delay","$offset","screenPoint","screenToWorld","viewport","navigation","getScreenViewport","n","utilities","getHitPoint","onCameraChanged","onVisibility","onExplode","dbIds","getAllDbIds","eventHandlers","EXPLODE_CHANGE_EVENT","CAMERA_CHANGE_EVENT","ISOLATE_EVENT","HIDE_EVENT","SHOW_EVENT","entry","geometry","Geometry","maxPoints","vertices","Vector3","shader","createShader","pointCloud","PointCloud","material","frustumCulled","sceneAfter","add","vertexShader","fragmentShader","tex","texture","shaderParams","side","DoubleSide","depthWrite","depthTest","attributes","pointSize","uniforms","ImageUtils","loadTexture","ShaderMaterial","stopwatch","Stopwatch","radius","setTexture","needsUpdate","dt","getElapsedMs","pixels","u","v","dist","dataTexture","DataTexture","Uint8Array","from","RGBAFormat","UnsignedByteType","UVMapping","minFilter","NearestFilter","magFilter","generateTexture","invalidate","res","override","getMarkupById","__visible","index","checkOcclusion","mesh","getRenderProxy","setFromMatrixPosition","matrixWorld","markupSize","initialFragPos","getFragmentPos","vertex","verticesNeedUpdate","updateMarkup","idx","data","occluded","fragPos","setMarkupPosition","_this8","nodeIdArray","indexOf","__setMarkupVisibility","domElement","camera","pointerVector","pointerDir","ray","Raycaster","params","threshold","selectionRayThreshold","isPerspective","set","unproject","position","sub","normalize","transformDirection","selectionDistThreshold","pointToRaycaster","canvas","intersectObjects","diff","clientPoint","worldToClient","rayCaster","rayIntersect","logOcclusionDist","occlusionDist","dbIdToIndex","getData","instanceTree","nodeAccess","keys","parseInt","_this9","remove"],"mappings":"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","file":"static/js/19.d63cc4e2.chunk.js","sourcesContent":["import PointCloudMarkup from './PointCloudMarkup'\n\nexport default PointCloudMarkup\n","import defaultTex from './PointCloudMarkup/texture.png'\nimport {OverlayTrigger, Popover} from 'react-bootstrap'\nimport 'rc-tooltip/assets/bootstrap.css'\nimport 'rc-slider/assets/index.css'\nimport Tooltip from 'rc-tooltip'\nimport {Component} from 'react'\nimport Slider from 'rc-slider'\nimport Switch from 'Switch'\nimport Label from 'Label'\nimport React from 'react'\n\nexport default class PointCloudMarkupItem extends Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n\n    this.onNameChanged = this.onNameChanged.bind(this)\n    this.onIconClicked = this.onIconClicked.bind(this)\n    this.onClick = this.onClick.bind(this)\n\n    this.state = {\n      name: props.markup.name\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onClick () {\n\n    this.props.onClick(this.props.markup.id)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onNameChanged (e) {\n\n    const id = this.props.markup.id\n\n    const name = e.target.value\n\n    this.setState({\n      name\n    })\n\n    this.props.onNameChanged(id, name)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderMarkupSettings () {\n\n    const markup = this.props.markup\n\n    const id = markup.id\n\n    return (\n      <Popover\n        className=\"pointcloud-markup-item settings\"\n        title=\"Markup Settings\"\n        id={\"settings-\"+id}>\n\n        <label>\n          Name:\n        </label>\n\n        <input\n          onChange={this.onNameChanged}\n          placeholder=\"Markup name ...\"\n          value={this.state.name}\n          className=\"input-name\"\n        />\n\n        <hr/>\n\n        <label>\n          Point Size:\n        </label>\n\n        <Slider\n          handle={(props) => this.onSliderChanged(props)}\n          defaultValue={markup.size}\n          max={200.0}\n          step={1.0}\n          min={1.0}\n        />\n\n        <hr/>\n\n        <label>\n          Visibility:\n        </label>\n\n        <Switch\n          onChange={(checked) => this.props.onVisible(id, checked)}\n          checked={markup.visible}\n        />\n\n        <hr/>\n\n        <label>\n          Occlusion:\n        </label>\n\n        <Switch\n          onChange={(checked) => this.props.onOcclusion(id, checked)}\n          checked={markup.occlusion}\n        />\n\n        <div className=\"footer\"/>\n\n      </Popover>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onSliderChanged (props) {\n\n    const { value, dragging, offset } = props\n\n    this.props.onSizeChanged(\n      this.props.markup.id,\n      value)\n\n    return (\n      <Tooltip\n        prefixCls=\"rc-slider-tooltip\"\n        visible={dragging}\n        overlay={value}\n        placement=\"top\">\n        <Slider.Handle className=\"rc-slider-handle\"\n          offset={offset}/>\n      </Tooltip>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onIconClicked (e) {\n\n    if (this.props.animation) {\n\n      this.props.onIconClicked()\n\n      e.stopPropagation()\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderIcon () {\n\n    const getStyle = () => {\n\n      if (this.props.animation) {\n\n        const clr = this.props.markup.color\n\n        const background =\n          `rgba(${clr.x*255},${clr.y*255},${clr.z*255},0.2)`\n\n        const border = `solid 2px ` +\n          `rgba(${clr.x*255},${clr.y*255},${clr.z*255},1)`\n\n        return {\n          background,\n          border\n        }\n      }\n\n      return {\n        backgroundImage: `url(${defaultTex})`\n      }\n    }\n\n    return (\n      <div className=\"item-icon\" onClick={this.onIconClicked}>\n        <div style={getStyle()}/>\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const markup = this.props.markup\n\n    return(\n      <div className=\"item\"\n        onMouseEnter={this.props.onMouseEnter}\n        onMouseLeave={this.props.onMouseLeave}\n        onClick={this.onClick}>\n        { this.renderIcon() }\n        <Label text= {markup.name}/>\n        <button className=\"remove hover-control\"\n          title=\"Remove Markup\"\n          onClick={(e) => {\n            this.props.onRemove(markup.id)\n            e.stopPropagation()\n          }}>\n          <span className=\"fa fa-times\"/>\n        </button>\n        <OverlayTrigger trigger=\"click\"\n          overlay={this.renderMarkupSettings()}\n          onExited={this.props.onHideSettings}\n          placement=\"left\"\n          rootClose>\n          <button className=\"settings-btn hover-control\"\n            title=\"Markup Settings\">\n            <span className=\"fa fa-cog\"/>\n          </button>\n        </OverlayTrigger>\n      </div>\n    )\n  }\n}\n","import EventTool from './Viewer.EventTool'\n\nexport default EventTool\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class EventTool extends EventsEmitter {\n\n  constructor (viewer) {\n\n    super()\n\n    this.viewer = viewer\n\n    this.toolName = this.guid()\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Tool names\n  //\n  /////////////////////////////////////////////////////////\n  getNames () {\n\n    return [this.getName()]\n  }\n\n  /////////////////////////////////////////////////////////\n  // Tool name\n  //\n  /////////////////////////////////////////////////////////\n  getName () {\n\n    return this.toolName\n  }\n\n  /////////////////////////////////////////////////////////\n  // Tool Priority\n  //\n  /////////////////////////////////////////////////////////\n  getPriority () {\n\n    return 1000\n  }\n\n  /////////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /////////////////////////////////////////////////////////\n  activate () {\n\n    if(!this.active) {\n\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.active) {\n\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  terminate () {\n\n    this.deactivate()\n    this.off()\n\n    this.viewer.toolController.deregisterTool(this)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n\n    return this.emit('singleclick', event, button)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleDoubleClick (event, button) {\n\n    return this.emit('doubleclick', event, button)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleMouseMove (event) {\n\n    return this.emit('mousemove', event)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleWheelInput (event) {\n\n    return this.emit('mousewheel', event)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleGesture (event) {\n\n    return this.emit('gesture', event)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n\n    return this.emit('buttondown', event, button)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n\n    return this.emit('buttonup', event, button)\n  }\n}\n\n\n","/////////////////////////////////////////////////////////\n// Viewing.Extension.PointCloudMarkup\n// by Philippe Leefsma, Dec 2017\n//\n/////////////////////////////////////////////////////////\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport PointCloudMarkupItem from './PointCloudMarkupItem'\nimport {OverlayTrigger, Popover} from 'react-bootstrap'\nimport './Viewing.Extension.PointCloudMarkup.scss'\nimport PointCloudMarkup from './PointCloudMarkup'\nimport WidgetContainer from 'WidgetContainer'\nimport { ChromePicker } from 'react-color'\nimport ViewerTooltip from 'Viewer.Tooltip'\nimport EventTool from 'Viewer.EventTool'\nimport 'rc-tooltip/assets/bootstrap.css'\nimport ServiceManager from 'SvcManager'\nimport 'rc-slider/assets/index.css'\nimport Loader from 'Loader'\nimport Switch from 'Switch'\nimport React from 'react'\n\nclass PointCloudMarkupExtension extends MultiModelExtensionBase {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options) {\n\n    super (viewer, options)\n\n    this.onMarkupSettingsChanged = this.onMarkupSettingsChanged.bind(this)\n    this.onMarkupSizeChanged = this.onMarkupSizeChanged.bind(this)\n    this.onMarkupNameChanged = this.onMarkupNameChanged.bind(this)\n    this.onMarkupOcclusion = this.onMarkupOcclusion.bind(this)\n    this.onMarkupsUpdated = this.onMarkupsUpdated.bind(this)\n    this.onMarkupRemoved = this.onMarkupRemoved.bind(this)\n    this.onMarkupClicked = this.onMarkupClicked.bind(this)\n    this.onMarkupVisible = this.onMarkupVisible.bind(this)\n    this.onClearMarkups = this.onClearMarkups.bind(this)\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.onActivate = this.onActivate.bind(this)\n    this.animate = this.animate.bind(this)\n    this.onClick = this.onClick.bind(this)\n\n    this.tooltip = new ViewerTooltip(this.viewer, {\n      stroke: 'orange',\n      fill: 'orange'\n    })\n\n    this.tooltipMousePos = {\n      x: 0, y: 0\n    }\n\n    this.tooltip.setContent(`\n      <div id=\"pointcloud-tooltipId\" class=\"pointcloud-tooltip\">\n          Specify markup position ...\n      </div>`, '#pointcloud-tooltipId')\n\n    this.dialogSvc =\n      ServiceManager.getService('DialogSvc')\n\n    this.eventTool = new EventTool(\n      this.viewer)\n\n    this.react = options.react\n\n    this.removeTooltipIds = {}\n\n    this.runAnimation = false\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  get className() {\n\n    return 'pointcloud-markup'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.PointCloudMarkup'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load () {\n\n    this.viewer.setProgressiveRendering(false)\n    this.viewer.setGhosting(false)\n\n    const {animation, active} = this.options.pointCloudMarkup\n\n    this.react.setState({\n\n      runAnimation: animation,\n      activated: active,\n      showLoader: true,\n      markups: []\n\n    }).then (async() => {\n\n      if (!this.options.readonly) {\n        await this.react.pushRenderExtension(this)\n      }\n\n      const model = this.viewer.activeModel ||\n        this.viewer.model\n\n      if (model) {\n\n        this.onObjectTreeCreated ()\n      }\n    })\n\n    console.log('Viewing.Extension.PointCloudMarkup loaded')\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload () {\n\n    console.log('Viewing.Extension.PointCloudMarkup unloaded')\n\n    this.react.popRenderExtension(this)\n    \n    this.pointCloudMarkup.destroy()\n\n    this.eventTool.terminate()\n\n    this.tooltip.deactivate()\n\n    super.unload()\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onActivate (activated) {\n\n    if (activated) {\n\n      this.eventTool.off ('mousemove', this.onMouseMove)\n      this.eventTool.on ('singleclick', this.onClick)\n      this.tooltip.activate()\n\n    } else {\n\n      this.eventTool.on ('mousemove', this.onMouseMove)\n      this.eventTool.off ('singleclick', this.onClick)\n      this.tooltip.deactivate()\n    }\n\n    this.react.setState({\n      activated\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  animate (run) {\n\n    run\n      ? this.pointCloudMarkup.startAnimation()\n      : this.pointCloudMarkup.stopAnimation()\n\n    const loop = (t) => {\n\n      if (this.pointCloudMarkup.runAnimation) {\n\n        window.requestAnimationFrame(loop)\n\n        this.pointCloudMarkup.update(t)\n      }\n    }\n\n    this.react.setState({\n      runAnimation: run\n    })\n\n    loop (0.0)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onObjectTreeCreated () {\n\n    const {\n      runAnimation,\n      activated\n    } = this.react.getState()\n\n    this.pointCloudMarkup = new PointCloudMarkup(\n      this.viewer, this.options.pointCloudMarkup)\n\n    this.pointCloudMarkup.on(\n      'markup.created',\n      this.onMarkupsUpdated)\n\n    this.pointCloudMarkup.on(\n      'markup.deleted',\n      this.onMarkupsUpdated)\n\n    this.react.setState({\n      showLoader: false\n    })\n\n    this.animate (runAnimation)\n\n    this.onActivate(activated)\n\n    this.eventTool.activate()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMouseMove (event) {\n\n    const pos = {\n      x:  event.clientX,\n      y:  event.clientY\n    }\n\n    const markups = \n      this.pointCloudMarkup.getSelection(pos)\n\n    if (markups.length) {\n\n      this.tooltipMousePos = pos\n\n      const markup = markups[0]\n\n      if (this.currentPanelId !== markup.id) {\n\n        if (this.removeTooltipIds[markup.id]) {\n        \n          clearTimeout(this.removeTooltipIds[markup.id])\n          this.currentPanelId = markup.id\n        \n        } else {\n\n          this.react.popViewerPanel(\n            this.currentPanelId)\n      \n          this.currentPanelId = markup.id\n\n          this.displayMarkupTooltip(\n            pos, markup) \n        }\n      }\n    } else {\n\n      const dist = Math.sqrt(\n        (this.tooltipMousePos.x - pos.x) * \n        (this.tooltipMousePos.x - pos.x) + \n        (this.tooltipMousePos.y - pos.y) * \n        (this.tooltipMousePos.y - pos.y))\n\n      if (dist > 16) {\n        const panelId = this.currentPanelId\n        this.currentPanelId = 0\n        this.removeTooltipIds[panelId] = setTimeout(() => {\n          panelId && this.react.popViewerPanel(panelId)\n          delete this.removeTooltipIds[panelId] \n        }, 500)\n      }\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getBounds (element) {\n\n    const rect = element.getBoundingClientRect()\n\n    return {\n      left: rect.left + window.pageXOffset,\n      top: rect.top + window.pageYOffset,\n      height: element.offsetHeight,\n      width: element.offsetWidth\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  displayMarkupTooltip (pos, markup) {\n\n    const renderable = {\n      title: markup.name,\n      id: markup.id,\n      render: () => {\n        return(\n          <div className=\"pointcloud-markup-tooltip\">\n            <img src={\"/resources/img/default.png\"}/>\n          </div>\n        )\n      }\n    }\n\n    const bounds = this.getBounds (\n      this.viewer.container)\n\n    const height = 250\n    const width = 250\n\n    const left = Math.min(\n      Math.max(1, pos.x - 300),\n      bounds.width - width + 50)\n\n    const top = Math.min(\n      Math.max(1, pos.y - 300),\n      bounds.height - height + 50)\n  \n    this.react.pushViewerPanel(renderable, {\n      displayMode: 'fadeIn',\n      resizeable: false,\n      draggable: false,\n      height,\n      width,\n      left,\n      top\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onClick (event) {\n\n    const hitTest = this.viewer.clientToWorld(\n      event.canvasX,\n      event.canvasY,\n      true)\n\n    if (hitTest) {\n\n      const markupInfo = {\n        fragId: hitTest.fragId,\n        point: hitTest.point,\n        dbId: hitTest.dbId\n      }\n\n      this.pointCloudMarkup.addMarkup(\n        markupInfo)\n\n      return true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupsUpdated () {\n\n    this.react.setState({\n      markups: this.pointCloudMarkup.markups\n    })\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //  From viewer.getState:\n  //  Allow extensions to inject their state data\n  //\n  //  for (var extensionName in viewer.loadedExtensions) {\n  //    viewer.loadedExtensions[extensionName].getState(\n  //      viewerState);\n  //  }\n  /////////////////////////////////////////////////////////////////\n  getState (state) {\n\n    state.pointCloudMarkup =\n      this.pointCloudMarkup.getState()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //    From viewer.restoreState:\n  //    Allow extensions to restore their data\n  //\n  //    for (var extensionName in viewer.loadedExtensions) {\n  //      viewer.loadedExtensions[extensionName].restoreState(\n  //        viewerState, immediate);\n  //    }\n  /////////////////////////////////////////////////////////////////\n  async restoreState (state, immediate) {\n\n    this.react.setState({\n      markups: []\n    })\n\n    if (immediate) {\n\n      this.pointCloudMarkup.restoreState(\n        state.pointCloudMarkup)\n\n    } else {\n\n      const onCameraTransitionCompleted = () => {\n\n        this.pointCloudMarkup.restoreState(\n          state.pointCloudMarkup)\n\n        this.viewer.removeEventListener(\n          Autodesk.Viewing.CAMERA_TRANSITION_COMPLETED,\n          onCameraTransitionCompleted)\n      }\n\n      this.viewer.addEventListener(\n        Autodesk.Viewing.CAMERA_TRANSITION_COMPLETED,\n        onCameraTransitionCompleted)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupClicked (markupId) {\n\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupNameChanged (markupId, name) {\n\n    this.pointCloudMarkup.setMarkupData (\n      markupId, {\n        name\n      })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupSizeChanged (markupId, size) {\n\n    this.pointCloudMarkup.setMarkupSize (\n      markupId, size)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupVisible (markupId, visible) {\n\n    this.pointCloudMarkup.setMarkupVisibility (\n      markupId, visible)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupOcclusion (markupId, occlusion) {\n\n    this.pointCloudMarkup.setMarkupOcclusion (\n      markupId, occlusion)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupRemoved (markupId) {\n\n    this.pointCloudMarkup.removeMarkup(markupId)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupSettingsChanged () {\n\n    this.react.setState({\n      markups: this.pointCloudMarkup.markups\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onClearMarkups () {\n\n    this.pointCloudMarkup.clearMarkups()\n\n    this.react.setState({\n      markups: []\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onColorPick (markup) {\n\n    const clr = markup.color\n\n    const rgb =  `rgb(${clr.x*255},${clr.y*255},${clr.z*255})`\n\n    this.dialogSvc.setState({\n      className: 'color-picker-dlg',\n      title: 'Select Color ...',\n      showCancel: false,\n      content:\n        <div>\n          <ChromePicker\n            onChangeComplete={(c) => this.onColorPicked(markup, c)}\n            color={rgb}\n          />\n        </div>,\n      open: true\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onColorPicked (markup, color) {\n\n   const { r, g, b } = color.rgb\n\n    this.pointCloudMarkup.setMarkupColor (\n      markup.id,\n      new THREE.Vector4(r/255.0, g/255.0, b/255.0, 1))\n\n    this.onMarkupsUpdated()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMarkupItemHover (markup, hover) {\n\n    if (this.pointCloudMarkup.runAnimation) {\n\n      const color = hover\n        ? new THREE.Vector4(0, 115/255, 1, 1)\n        : markup.color\n\n      this.pointCloudMarkup.setMarkupColor (\n        markup.id, color, true)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderMarkups () {\n\n    const { markups, runAnimation } = this.react.getState()\n\n    const items = markups.map((markup) => {\n\n      return (\n        <PointCloudMarkupItem\n          onMouseLeave={() => this.onMarkupItemHover(markup, false)}\n          onMouseEnter={() => this.onMarkupItemHover(markup, true)}\n          onIconClicked={() => this.onColorPick(markup)}\n          onHideSettings={this.onMarkupSettingsChanged}\n          onSizeChanged={this.onMarkupSizeChanged}\n          onNameChanged={this.onMarkupNameChanged}\n          onOcclusion={this.onMarkupOcclusion}\n          onVisible={this.onMarkupVisible}\n          onRemove={this.onMarkupRemoved}\n          onClick={this.onMarkupClicked}\n          animation={runAnimation}\n          markup={markup}\n          key={markup.id}\n        />\n      )\n    })\n\n    return (\n      <div className=\"items\">\n        { items }\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderSettings (activated, animation) {\n    return (\n      <Popover\n        className=\"pointcloud-markup settings\"\n        title=\"PointCloud Markup Settings\"\n        id=\"settings\">\n        <label>\n          Activated:\n        </label>\n        <Switch onChange={this.onActivate}\n          checked={activated}\n        />\n        <hr/>\n        <label>\n          Animation:\n        </label>\n        <Switch onChange={this.animate}\n          checked={animation}\n        />\n        <div className=\"footer\"/>\n      </Popover>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTitle () {\n\n    const {\n      runAnimation,\n      activated,\n      markups\n    } = this.react.getState()\n\n    return (\n      <div className=\"title markup-controls\">\n        <label>\n          PointCloud Markups\n        </label>\n        <OverlayTrigger trigger=\"click\"\n          overlay={this.renderSettings(activated, runAnimation)}\n          placement=\"bottom\"\n          rootClose>\n          <button className=\"settings-btn\" title=\"Settings\">\n            <span className=\"fa fa-cog\"/>\n          </button>\n        </OverlayTrigger>\n        {\n          !!markups.length &&\n          <button\n            onClick={this.onClearMarkups}\n            title=\"Clear All Markups\"\n            className=\"clear-btn\">\n            <span className=\"fa fa-times\"/>\n          </button>\n        }\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render (opts = {showTitle: true}) {\n\n    const {showLoader} = this.react.getState()\n\n    return (\n      <WidgetContainer renderTitle={this.renderTitle}\n        showTitle={opts.showTitle}\n        className={this.className}>\n        <Loader show={showLoader}/>\n        { this.renderMarkups() }\n      </WidgetContainer>\n    )\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  PointCloudMarkupExtension.ExtensionId,\n  PointCloudMarkupExtension)\n\n\n","import './Viewing.Extension.PointCloudMarkup'\n\nexport default 'Viewing.Extension.PointCloudMarkup'\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer (Autodesk.Viewing.Extension) {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n\n    super (viewer)\n\n    // bindings\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated  = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded    = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded    = this.onExtensionLoaded.bind(this)\n    this.onModelActivated     = this.onModelActivated.bind(this)\n    this.onGeometryLoaded     = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated     = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad     = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded      = this.onModelUnloaded.bind(this)\n    this.onSelection          = this.onSelection.bind(this)\n\n    this.__onLoadNodeProperties = this.__onLoadNodeProperties.bind(this)\n    this.__onModelRootLoaded    = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated     = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded      = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded        = this.__onModelLoaded.bind(this)\n\n    this.models = viewer.impl.modelQueue().getModels()\n\n    this.defaultOptions = defaultOptions\n\n    this.options = {\n      ...defaultOptions,\n      ...options\n    }\n\n    this.react = this.options.react\n\n    this.viewer = viewer\n\n    this.initializeEvents()\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load () { \n\n    if (this.options.contextMenu && this.onContextMenu) {\n      this.options.contextMenu.addHandler(\n        this.onContextMenu)\n    } \n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload () {\n\n    if (this.options.contextMenu && this.onContextMenu) {\n      this.options.contextMenu.removeHandler(\n        this.onContextMenu)\n    }\n\n    this.viewerEvents.forEach((event) => {\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n\n      this.eventSink.off(\n        'MetaProperties:loadNodeProperties',\n        this.__onLoadNodeProperties)\n\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /////////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /////////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /////////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    //console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /////////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n\n      this.onModelCompletedLoad (args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  ////////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /////////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /////////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /////////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /////////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /////////////////////////////////////////////////////////\n  onSelection (event) {\n\n    //console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /////////////////////////////////////////////////////////\n  //Sink Events\n  //\n  /////////////////////////////////////////////////////////\n  __onLoadNodeProperties ({dbId, properties}) {\n    \n    if (this.onLoadNodeProperties) {\n      return this.onLoadNodeProperties(dbId, properties)\n    }\n  }\n\n  __onModelLoaded (event) {\n\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad (event)\n  }\n\n  __onModelActivated (event) {\n\n    this.onModelActivated (event)\n  }\n\n  __onModelUnloaded (event) {\n\n    this.models = this.models.filter((model) => {\n\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /////////////////////////////////////////////////////////\n  initializeEvents () {\n\n    if (this.options.eventSink) {\n\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on(\n        'MetaProperties:loadNodeProperties',\n        this.__onLoadNodeProperties)\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      }\n    ]\n\n    if (!this.options.controlledSelection) {\n      this.viewerEvents.push({\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      })\n    }\n   \n    this.viewerEvents.forEach((event) => {\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /////////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n\n    if (handler) {\n\n      this.viewer.addEventListener (eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise ((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener (id, __handler)\n          resolve (args)\n        }\n        this.viewer.addEventListener (id, __handler)\n      })\n    })\n\n    return Promise.all (eventTasks)\n  }\n\n  /////////////////////////////////////////////////////////\n  // \n  //\n  /////////////////////////////////////////////////////////\n  emit (eventId, args) {\n    return this.options.eventSink\n      ? this.options.eventSink.emit(eventId, args)\n      : super.emit(eventId, args)\n  }\n\n  emitAcc (eventId, args) {\n    return this.options.eventSink\n      ? this.options.eventSink.emitAcc(eventId, args)\n      : super.emitAcc(eventId, args)\n  }\n}\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".widget-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.widget-container > .title {\\n  border-bottom: 1px solid #cdcdcd;\\n  background-color: #f5f5f5;\\n  padding-right: 10px;\\n  color: black;\\n  position: relative;\\n  overflow: hidden;\\n  text-align: left;\\n  height: 40px;\\n  width: 100%; }\\n\\n.widget-container > .title > label {\\n  white-space: nowrap;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px; }\\n\\n.widget-container > .content {\\n  position: relative;\\n  overflow: hidden;\\n  height: 100%;\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n","import PropTypes from 'prop-types'\nimport './WidgetContainer.scss'\nimport React from 'react'\n\nclass WidgetContainer extends React.PureComponent {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    showTitle: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    showTitle: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTitle () {\n\n    if (!this.props.showTitle) {\n\n      return <div/>\n    }\n\n    if (this.props.renderTitle) {\n\n      return this.props.renderTitle()\n    }\n\n    return (\n      <div className=\"title\">\n        <label>\n          { this.props.title }\n        </label>\n      </div>\n    )\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  renderChildren() {\n\n    if (this.props.dimensions) {\n\n      return React.Children.map(this.props.children, (child) => {\n\n        const newProps = Object.assign({},\n          child.props, {\n            dimensions: this.props.dimensions\n          })\n\n        return React.cloneElement(child, newProps)\n      })\n    }\n\n    return this.props.children\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'widget-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const height = this.props.showTitle\n      ? 'calc(100% - 40px)'\n      : '100%'\n\n    return (\n      <div className={classNames.join(' ')} style={this.props.style}>\n         { this.renderTitle() }\n        <div className=\"content\" style={{height}}>\n          {this.renderChildren()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WidgetContainer\n","import WidgetContainer from './WidgetContainer'\n\nexport default WidgetContainer\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Label.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Label.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Label.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-container {\\n  position: relative;\\n  overflow: hidden;\\n  font-size: 100%;\\n  color: #343434;\\n  height: 100%;\\n  float: left; }\\n\", \"\"]);\n\n// exports\n","import PropTypes from 'prop-types'\nimport DOMPurify from 'dompurify'\nimport React from 'react'\nimport './Label.scss'\n\nexport default class Label extends React.PureComponent {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    textAlign: PropTypes.string,\n    className: PropTypes.string,\n    text: PropTypes.string\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    textAlign: 'left',\n    className: '',\n    text: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'label-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const style = {\n      width: this.props.textAlign === 'center'\n        ? '100%' : '',\n      textAlign: this.props.textAlign\n    }\n\n    return(\n      <div className={classNames.join(' ')}\n        style={style}>\n        <p>\n          { DOMPurify.sanitize(this.props.text) }\n        </p>\n      </div>\n    )\n  }\n}\n","import Label from './Label'\n\nexport default Label\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default class Switch extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    checked: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    checked: true,\n    className: '',\n    style: {},\n    title: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor () {\n\n    super ()\n\n    this.state = {\n      checked: true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentWillMount () {\n\n    this.setState({\n      checked: this.props.checked\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  toggle = () => {\n\n    if (this.props.disabled) {\n      return\n    }\n\n    const checked = !this.state.checked\n\n    this.setState({\n      checked\n    })\n\n    if (this.props.onChange) {\n\n      this.props.onChange (checked)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'switch-container',\n      this.props.disabled ? 'disabled' : '',\n      ...this.props.className.split(' ')\n    ]\n\n    return(\n      <div className={classNames.join(' ')} \n        title={this.props.title}\n        style={this.props.style}\n        onClick={this.toggle}>\n        <input ref=\"switch\" className=\"switch\"\n          checked={this.state.checked}\n          value={this.state.checked}\n          \n          onChange={()=> {}}\n          type=\"checkbox\"\n        />\n        <div>\n          <span>\n            <p className=\"icon icon-toolbar grid-view\"/>\n          </span>\n          <span>\n            <p className=\"icon icon-toolbar ticket-view\"/>\n          </span>\n          <div/>\n        </div>\n      </div>\n    )\n  }\n}\n","import Switch from './Switch'\nimport './Switch.scss'\n\nexport default Switch\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--7-1!../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".switch-container {\\n  position: relative; }\\n\\n.switch-container *:hover {\\n  cursor: pointer; }\\n\\n.switch-container.disabled *:hover {\\n  cursor: not-allowed; }\\n\\ninput[type=\\\"checkbox\\\"].switch {\\n  pointer-events: none;\\n  position: absolute;\\n  cursor: pointer;\\n  opacity: 0; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  vertical-align: middle;\\n  width: 40px;\\n  height: 20px;\\n  border-radius: 999px;\\n  background-color: #9d9d9d;\\n  transition-duration: .4s;\\n  transition-property: background-color, box-shadow;\\n  cursor: pointer; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span {\\n  position: absolute;\\n  font-size: 1.6rem;\\n  color: #f5f5f5;\\n  margin-top: 12px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(1) {\\n  margin-left: 15px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(2) {\\n  margin-left: 55px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div {\\n  background-position: 0 0;\\n  background-color: #0089c7; }\\n\\n.switch-container.disabled input[type=\\\"checkbox\\\"].switch + div {\\n  background-color: rgba(157, 157, 157, 0.5); }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  height: 26px;\\n  width: 60px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div > div {\\n  float: left;\\n  width: 24px;\\n  height: 24px;\\n  border-radius: inherit;\\n  background: #f5f5f5;\\n  transition-timing-function: cubic-bezier(1, 0, 0, 1);\\n  transition-duration: 0.4s;\\n  transition-property: background-color, -webkit-transform;\\n  transition-property: transform, background-color;\\n  transition-property: transform, background-color, -webkit-transform;\\n  pointer-events: none;\\n  margin-top: 1px;\\n  margin-left: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  -webkit-transform: translate3d(20px, 0, 0);\\n  transform: translate3d(20px, 0, 0);\\n  background-color: #f5f5f5; }\\n\\ninput[type=\\\"checkbox\\\"].bigswitch.switch + div > div {\\n  width: 44px;\\n  height: 44px;\\n  margin-top: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  -webkit-transform: translate3d(34px, 0, 0);\\n  transform: translate3d(34px, 0, 0); }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../node_modules/sass-loader/lib/loader.js!./Viewer.Tooltip.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../node_modules/sass-loader/lib/loader.js!./Viewer.Tooltip.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--7-1!../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../node_modules/sass-loader/lib/loader.js!./Viewer.Tooltip.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"a91f7a1f684a8cae1c93a3e15fda6826.png\";","import ViewerTooltip from './Viewer.Tooltip'\nimport './Viewer.Tooltip.scss'\n\nexport default ViewerTooltip\n","import Snap from 'imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js'\nimport EventsEmitter from 'EventsEmitter'\nimport velocity from 'velocity-animate'\nimport './Viewer.Tooltip.scss'\n\nexport default class ViewerTooltip extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, opts = {}) {\n\n    super()\n\n    this.markerId = this.guid()\n\n    this.svgId = this.guid()\n\n    this.name = this.guid()\n\n    this.viewer = viewer\n\n    this.active = false\n\n    this.options = opts\n\n    const htmlMarker = `\n      <div id=\"${this.markerId}\" class=\"tooltip-marker\">\n        <svg id=\"${this.svgId}\"></svg>\n      </div>`\n\n    viewer.toolController.registerTool(this)\n\n    $(viewer.container).append(htmlMarker)\n\n    this.$marker = $(`#${this.markerId}`)\n\n    this.pointer = this.createPointer(\n      $(`#${this.svgId}`)[0])\n\n    this.timeout = null\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createPointer (element) {\n\n    const snap = Snap(element)\n\n    const circle = snap.paper.circle(25, 25, 0)\n\n    circle.attr({\n      fillOpacity: this.options.fillOpacity || 0.4,\n      strokeWidth: this.options.strokeWidth || 2,\n      stroke: this.options.stroke || '#FF0000',\n      fill: this.options.fill || '#FF0000',\n      opacity: this.options.opacity || 1\n    })\n\n    return circle\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  animatePointer (id) {\n\n    if(this.animateId === id) {\n\n      this.pointer.attr({\n        fillOpacity: 0.8,\n        opacity: 1,\n        r: 0\n      })\n\n      this.pointer.animate({\n          fillOpacity: 0.2,\n          opacity: 0.4,\n          r: 16\n        },\n        2000,\n        mina.easein, () => {\n\n          if (this.pointerVisible) {\n\n            this.animatePointer(id)\n          }\n        })\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setContent (html, selector) {\n\n    this.tooltipSelector = selector\n\n    $(this.viewer.container).append(html)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Tool names\n  //\n  /////////////////////////////////////////////////////////\n  getNames () {\n\n    return [this.name]\n  }\n\n  /////////////////////////////////////////////////////////\n  // Tool name\n  //\n  /////////////////////////////////////////////////////////\n  getName () {\n\n    return this.name\n  }\n\n  /////////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /////////////////////////////////////////////////////////\n  activate () {\n\n    if(!this.active || this.timeout) {\n\n      this.viewer.container.addEventListener(\n        'mouseenter', this.onMouseEnter)\n\n      this.viewer.container.addEventListener(\n        'mouseleave', this.onMouseLeave)\n\n      clearTimeout(this.timeout)\n\n      this.timeout = null\n\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.getName())\n\n      $(this.tooltipSelector).css({\n        display: 'block'\n      })\n\n      $(this.tooltipSelector).velocity({\n        opacity: 1.0\n      })\n\n      this.emit('activate')\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /////////////////////////////////////////////////////////\n  deactivate (delay = 0) {\n\n    if (this.active && !this.timeout) {\n\n      this.viewer.container.removeEventListener(\n        'mouseenter', this.onMouseEnter)\n\n      this.viewer.container.removeEventListener(\n        'mouseleave', this.onMouseLeave)\n\n      this.timeout = setTimeout(() => {\n\n        if (this.viewer.toolController) {\n          this.viewer.toolController.deactivateTool(\n            this.getName())\n        }\n\n        $(this.tooltipSelector).css({\n          display: 'none',\n          opacity: 0.0\n        })\n\n        this.active = false\n\n      }, delay)\n\n      this.pointerVisible = false\n\n      this.$marker.css({\n        display: 'none'\n      })\n\n      this.emit('deactivate')\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMouseEnter = () => {\n\n    $(this.tooltipSelector).css({\n      display: 'block'\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onMouseLeave = ()=>  {\n\n    $(this.tooltipSelector).css({\n      display: 'none'\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n\n    return false\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleMouseMove (event) {\n\n    const $offset = $(this.viewer.container).offset()\n\n    $(this.tooltipSelector).css({\n      top  : event.clientY - $offset.top - 35 + 'px',\n      left : event.clientX - $offset.left + 'px'\n    })\n\n    const screenPoint = {\n      x: event.clientX,\n      y: event.clientY\n    }\n\n    const worldPoint = this.screenToWorld(screenPoint)\n\n    if (worldPoint && this.active) {\n\n      const offset = $(this.viewer.container).offset()\n\n      this.$marker.css({\n        left: screenPoint.x - offset.left - this.$marker.width()/2,\n        top: screenPoint.y - offset.top - this.$marker.height()/2,\n        display: 'block'\n      })\n\n      if (!this.pointerVisible) {\n\n        this.pointerVisible = true\n\n        this.animateId = this.guid()\n\n        this.animatePointer(\n          this.animateId)\n      }\n\n    } else {\n\n      this.pointerVisible = false\n\n      this.$marker.css({\n        display: 'none'\n      })\n\n      this.pointer.attr({\n        r: 0\n      })\n    }\n\n    return false\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  screenToWorld (screenPoint) {\n\n    var viewport = this.viewer.navigation.getScreenViewport()\n\n    var n = {\n      x: (screenPoint.x - viewport.left) / viewport.width,\n      y: (screenPoint.y - viewport.top ) / viewport.height\n    }\n\n    return this.viewer.utilities.getHitPoint(n.x, n.y)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    return false\n  }\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tooltip-marker {\\n  pointer-events: none;\\n  position: absolute;\\n  display: none;\\n  height: 50px;\\n  width: 50px; }\\n\\n.tooltip-marker svg {\\n  pointer-events: none;\\n  height: 50px;\\n  width: 50px; }\\n\", \"\"]);\n\n// exports\n","///////////////////////////////////////////////////////////\n// PointCloudMarkup: high-perf markup 3D for Forge Viewer\n// by Philippe Leefsma, December 2017\n//\n///////////////////////////////////////////////////////////\nimport EventsEmitter from 'EventsEmitter'\nimport defaultTex from './texture.png'\nimport Stopwatch from 'Stopwatch'\n\nexport default class PointCloudMarkup extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super()\n\n    this.onCameraChanged = this.onCameraChanged.bind(this)\n    this.onVisibility = this.onVisibility.bind(this)\n    this.onExplode = this.onExplode.bind(this)\n\n    this.viewer = viewer\n\n    this.dbIds = this.getAllDbIds()\n\n    this.eventHandlers = [{\n        event: Autodesk.Viewing.EXPLODE_CHANGE_EVENT,\n        handler: this.onExplode\n      }, {\n        event: Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n        handler: this.onCameraChanged\n      }, {\n        event: Autodesk.Viewing.ISOLATE_EVENT,\n        handler: this.onVisibility\n      }, {\n        event: Autodesk.Viewing.HIDE_EVENT,\n        handler: this.onVisibility\n      }, {\n        event: Autodesk.Viewing.SHOW_EVENT,\n        handler: this.onVisibility\n      }]\n\n    this.eventHandlers.forEach((entry) => {\n\n      this.viewer.addEventListener(\n        entry.event, entry.handler)\n    })\n\n    // Initialize geometry vertices\n    // and shader attribute colors\n    this.geometry = new THREE.Geometry()\n\n    const maxPoints = options.maxPoints || 10000\n\n    for (var i = 0; i < maxPoints; ++i) {\n\n      this.geometry.vertices.push(new THREE.Vector3)\n    }\n\n    this.shader = this.createShader(options)\n\n    // creates THREE.PointCloud\n    this.pointCloud = new THREE.PointCloud(\n      this.geometry, this.shader.material)\n\n    this.pointCloud.frustumCulled = false\n\n    // adds to the viewer scene\n    this.viewer.impl.sceneAfter.add(this.pointCloud)\n\n    //this.update = throttle(this.update, 10)\n\n    this.options = options\n\n    this.markups = []\n  }\n\n  /////////////////////////////////////////////////////////\n  // Generates custom shader using an updatable\n  // dynamic texture generated programmatically\n  //\n  /////////////////////////////////////////////////////////\n  createShader (options) {\n\n    // Vertex Shader code\n    const vertexShader = options.vertexShader || `\n      attribute float pointSize;\n      attribute vec4 color;\n      varying vec4 vColor;\n      void main() {\n        vec4 vPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * vPosition;\n        gl_PointSize = pointSize;\n        vColor = color;\n      }\n    `\n\n    // Fragment Shader code\n    const fragmentShader = options.fragmentShader || `\n      uniform sampler2D texture;\n      varying vec4 vColor;\n      void main() {\n        vec4 tex = texture2D(texture, gl_PointCoord);\n        if (tex.a < 0.2) discard;\n        if (vColor.a == 0.0) {\n          gl_FragColor = vec4(tex.r, tex.g, tex.b, tex.a);\n        } else {\n          gl_FragColor = vColor;\n        }\n      }\n    `\n\n    const tex = options.texture || defaultTex\n\n    // Shader material parameters\n    const shaderParams = options.shaderParams || {\n        side: THREE.DoubleSide,\n        depthWrite: false,\n        depthTest: false,\n        fragmentShader,\n        vertexShader,\n        opacity: 0.5,\n        attributes: {\n          pointSize: {\n            type: 'f',\n            value: []\n          },\n          color: {\n            type: 'v4',\n            value: []\n          }\n        },\n        uniforms: {\n          texture: {\n            value: THREE.ImageUtils.loadTexture(tex),\n            type: 't'\n          }\n        }\n      }\n\n    // creates shader material\n    const material =\n      new THREE.ShaderMaterial(\n        shaderParams)\n\n    const generateTexture = (size, radius) => {\n\n      const pixels = []\n\n      for (let u = 0; u < size; ++u) {\n\n        for (let v = 0; v < size ; ++v) {\n\n          const dist = Math.sqrt(\n            (u/size - 0.5) * (u/size - 0.5) +\n            (v/size - 0.5) * (v/size - 0.5))\n\n         if (dist < 0.1) {\n\n           pixels.push(0xff, 0x00, 0x00, 0xff)\n\n         } else if (dist < (radius - 0.05)) {\n\n            pixels.push(0xff, 0x00, 0x00, 0x00)\n\n          } else if (dist < radius) {\n\n            pixels.push(0xff, 0x00, 0x00, 0xff)\n\n          } else {\n\n            pixels.push(0x00, 0x00, 0x00, 0x00)\n          }\n        }\n      }\n\n      const dataTexture = new THREE.DataTexture (\n        Uint8Array.from (pixels),\n        size, size,\n        THREE.RGBAFormat,\n        THREE.UnsignedByteType,\n        THREE.UVMapping\n      )\n\n      dataTexture.minFilter = THREE.NearestFilter\n      dataTexture.magFilter = THREE.NearestFilter\n      dataTexture.needsUpdate = true\n\n      return dataTexture\n    }\n\n    const generateCanvasTexture = () => {\n\n      const canvas = document.createElement(\"canvas\")\n      const ctx = canvas.getContext('2d')\n\n      ctx.font = '20pt Arial'\n      ctx.textAlign = 'center'\n      ctx.textBaseline = 'middle'\n      ctx.fillText(new Date().toLocaleString(),\n        canvas.width / 2, canvas.height / 2)\n\n      const canvasTexture = new THREE.Texture(canvas)\n\n      canvasTexture.needsUpdate = true\n      canvasTexture.flipX = false\n      canvasTexture.flipY = false\n\n      return canvasTexture\n    }\n\n    const stopwatch = new Stopwatch()\n\n    let radius = 0.0\n\n    return {\n      setTexture: (tex) => {\n\n        const {texture} = shaderParams.uniforms\n\n        texture.value = THREE.ImageUtils.loadTexture(tex)\n\n        texture.needsUpdate = true\n\n      },\n      update: () => {\n\n        const dt = stopwatch.getElapsedMs() * 0.001\n\n        radius += dt * 0.25\n\n        radius = radius > 0.5 ? 0.0 : radius\n\n        const {texture} = shaderParams.uniforms\n\n        //texture.value = generateCanvasTexture()\n        texture.value = generateTexture(96, radius)\n\n        texture.needsUpdate = true\n      },\n      material\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  startAnimation () {\n\n    this.markups.forEach((markup) => {\n\n      this.setMarkupColor (markup.id,\n        markup.color)\n    })\n\n    this.viewer.impl.invalidate (true)\n\n    this.runAnimation = true\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  stopAnimation () {\n\n    const texture = this.options.texture || defaultTex\n\n    this.shader.setTexture(texture)\n\n    this.markups.forEach((markup) => {\n\n      this.setMarkupColor (markup.id,\n        new THREE.Vector4(0,0,0,0),\n        true)\n    })\n\n    this.viewer.impl.invalidate (true)\n\n    this.runAnimation = false\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  update (t) {\n\n    this.shader.update(t)\n\n    this.viewer.impl.invalidate (false, true, false)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Returns markup from markupId\n  //\n  /////////////////////////////////////////////////////////\n  getMarkupById (markupId) {\n\n    const res = this.markups.filter((markup) => {\n\n      return markup.id === markupId\n    })\n\n    return res.length ? res[0] : null\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup size\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupSize (markupId, size, override) {\n\n    const {pointSize} = this.pointCloud.material.attributes\n\n    const markup = this.getMarkupById(markupId)\n\n    const visible = markup.visible && markup.__visible\n\n    if (override) {\n\n      pointSize.value[markup.index] = size\n\n    } else if (visible) {\n\n      if (markup.occlusion) {\n\n        if (!this.checkOcclusion(markup)) {\n\n          pointSize.value[markup.index] = size\n        }\n\n      } else {\n\n        pointSize.value[markup.index] = size\n      }\n    }\n\n    markup.size = !override ? size : markup.size\n\n    pointSize.needsUpdate = true\n\n    this.viewer.impl.invalidate (true)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup color\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupColor (markupId, clr, override) {\n\n    const {color} = this.pointCloud.material.attributes\n\n    const markup = this.getMarkupById(markupId)\n\n    color.value[markup.index] = clr\n\n    markup.color = !override ? clr : markup.color\n\n    color.needsUpdate = true\n\n    this.viewer.impl.invalidate (true)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Adds new markup\n  //\n  /////////////////////////////////////////////////////////\n  getFragmentPos (fragId) {\n\n    const mesh = this.viewer.impl.getRenderProxy(\n      this.viewer.model, fragId)\n\n    const pos = new THREE.Vector3()\n\n    pos.setFromMatrixPosition(mesh.matrixWorld)\n\n    return pos\n  }\n\n  /////////////////////////////////////////////////////////\n  // Adds new markup\n  //\n  /////////////////////////////////////////////////////////\n  addMarkup (markupInfo) {\n\n    const size = markupInfo.size ||\n      this.options.markupSize ||\n      40\n\n    const index = this.markups.length\n\n    const markup = Object.assign({}, {\n      initialFragPos: this.getFragmentPos(markupInfo.fragId),\n      color: new THREE.Vector4(1,0,0,1),\n      name: 'Markup ' + (index + 1),\n      id: this.guid('xxx-xxx-xxx'),\n      __visible: true,\n      occlusion: true,\n      visible: true,\n      size\n    }, markupInfo, {\n      index\n    })\n\n    const vertex = this.geometry.vertices[markup.index]\n\n    vertex.x = markup.point.x\n    vertex.y = markup.point.y\n    vertex.z = markup.point.z\n\n    this.geometry.verticesNeedUpdate = true\n\n    this.markups.push(markup)\n\n    this.setMarkupSize (\n      markup.id, markup.size)\n\n    this.updateMarkup (markup)\n\n    this.setMarkupColor (\n      markup.id,\n      this.runAnimation\n        ? markup.color\n        : new THREE.Vector4(0,0,0,0),\n      !this.runAnimation)\n\n    this.emit('markup.created', markup)\n\n    return markup\n  }\n\n  /////////////////////////////////////////////////////////\n  // Removes markup\n  //\n  /////////////////////////////////////////////////////////\n  removeMarkup (markupId) {\n\n    const {pointSize} = this.pointCloud.material.attributes\n\n    this.markups = this.markups.filter((markup) => {\n\n        return (markup.id !== markupId)\n    })\n\n    this.markups.forEach((markup, idx) => {\n\n      const vertex = this.geometry.vertices[idx]\n\n      pointSize.value[idx] = markup.size\n\n      vertex.x = markup.point.x\n      vertex.y = markup.point.y\n      vertex.z = markup.point.z\n\n      markup.index = idx\n\n      this.updateMarkup (markup)\n    })\n\n    for (let idx = this.markups.length;\n             idx < this.geometry.vertices.length; ++idx) {\n\n      pointSize.value[idx] = 0.0\n    }\n\n    this.geometry.verticesNeedUpdate = true\n\n    pointSize.needsUpdate = true\n\n    this.viewer.impl.invalidate(true)\n\n    this.emit('markup.deleted',\n      markupId)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Clear all markups\n  //\n  /////////////////////////////////////////////////////////\n  clearMarkups () {\n\n    const {pointSize} = this.pointCloud.material.attributes\n\n    const {length} = this.geometry.vertices\n\n    for (let idx = 0; idx < length; ++idx) {\n\n      pointSize.value[idx] = 0.0\n    }\n\n    pointSize.needsUpdate = true\n\n    this.viewer.impl.invalidate (true)\n\n    this.markups = []\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup position\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupPosition (markupId, point) {\n\n    const markup = this.getMarkupById(markupId)\n\n    const vertex = this.geometry.vertices[markup.index]\n\n    vertex.x = point.x\n    vertex.y = point.y\n    vertex.z = point.z\n\n    this.geometry.verticesNeedUpdate = true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup data\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupData (markupId, data) {\n\n    const markup = this.getMarkupById(markupId)\n\n    Object.assign(markup, data)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup visibility: to hide markup, set size to 0\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupVisibility (markupId, visible) {\n\n    const markup = this.getMarkupById(markupId)\n\n    markup.visible = visible\n\n    this.updateMarkup (markup)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup visibility internal\n  //\n  /////////////////////////////////////////////////////////\n  __setMarkupVisibility (markupId, __visible) {\n\n    const markup = this.getMarkupById(markupId)\n\n    markup.__visible = __visible\n\n    this.updateMarkup (markup)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Set markup occlusion property\n  //\n  /////////////////////////////////////////////////////////\n  setMarkupOcclusion (markupId, occlusion) {\n\n    const markup = this.getMarkupById(markupId)\n\n    markup.occlusion = occlusion\n\n    this.updateMarkup (markup)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Update markup\n  //\n  /////////////////////////////////////////////////////////\n  updateMarkup (markup) {\n\n    const visible = markup.visible && markup.__visible\n\n    if (visible) {\n\n      if (markup.occlusion) {\n\n        const occluded = this.checkOcclusion(markup)\n\n        this.setMarkupSize (markup.id,\n          occluded ? 0.0 : markup.size,\n          true)\n\n      } else {\n\n        this.setMarkupSize (markup.id,\n          markup.size,\n          true)\n      }\n\n    } else {\n\n      this.setMarkupSize (markup.id,\n        0.0, true)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Get markups state\n  //\n  /////////////////////////////////////////////////////////\n  getState () {\n\n    return {\n      markups: this.markups\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Restore state\n  //\n  /////////////////////////////////////////////////////////\n  restoreState (state = {}) {\n\n    this.clearMarkups()\n\n    if (state.markups) {\n\n      state.markups.forEach((markup) => {\n\n        this.addMarkup(markup)\n      })\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Camera Changed event handler\n  //\n  /////////////////////////////////////////////////////////\n  onCameraChanged (event) {\n\n    this.markups.forEach((markup) => {\n\n      const visible = markup.visible && markup.__visible\n\n      if (visible && markup.occlusion) {\n\n        const occluded = this.checkOcclusion(markup)\n\n        this.setMarkupSize (markup.id,\n          occluded ? 0.0 : markup.size,\n          true)\n      }\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Explode event handler\n  //\n  /////////////////////////////////////////////////////////\n  onExplode (event) {\n\n    this.markups.forEach((markup) => {\n\n      const visible = markup.visible && markup.__visible\n\n      if (visible) {\n\n        const fragPos = this.getFragmentPos(markup.fragId)\n\n        const {point, initialFragPos} = markup\n\n        const pos = {\n          x: point.x + fragPos.x - initialFragPos.x,\n          y: point.y + fragPos.y - initialFragPos.y,\n          z: point.z + fragPos.z - initialFragPos.z\n        }\n\n        this.setMarkupPosition(markup.id, pos)\n      }\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Visibility Changed event handler\n  //\n  /////////////////////////////////////////////////////////\n  onVisibility (event) {\n\n    this.markups.forEach((markup) => {\n\n      const dbIds = event.nodeIdArray\n\n      switch (event.type) {\n\n        case 'isolate':\n\n          // if this node is isolated or all nodes visible\n          if (dbIds.indexOf(markup.dbId) > -1 || !dbIds.length) {\n\n            this.__setMarkupVisibility(markup.id, true)\n\n            // if another node is isolated\n          } else if (dbIds.length) {\n\n            this.__setMarkupVisibility(markup.id, false)\n          }\n\n          break\n\n        case 'hide':\n\n          // this node is hidden\n          if (dbIds.indexOf(markup.dbId) > -1) {\n\n            this.__setMarkupVisibility(markup.id, false)\n          }\n\n          break\n\n        case 'show':\n\n          // this node is shown\n          if (dbIds.indexOf(markup.dbId) > -1) {\n\n            this.__setMarkupVisibility(markup.id, true)\n          }\n\n          break\n      }\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Creates Raycaster object from client point\n  //\n  /////////////////////////////////////////////////////////\n  pointToRaycaster (domElement, camera, point) {\n\n    const pointerVector = new THREE.Vector3()\n    const pointerDir = new THREE.Vector3()\n    const ray = new THREE.Raycaster()\n\n    ray.params.PointCloud.threshold = \n      this.options.selectionRayThreshold ||\n      1.0\n\n    const rect = domElement.getBoundingClientRect()\n\n    const x =  ((point.x - rect.left) / rect.width)  * 2 - 1\n    const y = -((point.y - rect.top)  / rect.height) * 2 + 1\n\n    if (camera.isPerspective) {\n\n      pointerVector.set(x, y, 0.5)\n\n      pointerVector.unproject(camera)\n\n      ray.set(camera.position,\n        pointerVector.sub(\n          camera.position).normalize())\n\n    } else {\n\n      pointerVector.set(x, y, -1)\n\n      pointerVector.unproject(camera)\n\n      pointerDir.set(0, 0, -1)\n\n      ray.set(pointerVector,\n        pointerDir.transformDirection(\n          camera.matrixWorld))\n    }\n\n    return ray\n  }\n\n  /////////////////////////////////////////////////////////\n  // Returns array of selected markups for given screenPoint\n  //\n  /////////////////////////////////////////////////////////\n  getSelection (screenPoint, \n    threshold = this.options.selectionDistThreshold || 1.0) {\n\n    const rayCaster = this.pointToRaycaster(\n      this.viewer.impl.canvas,\n      this.viewer.impl.camera, {\n        x: screenPoint.x,\n        y: screenPoint.y\n      })\n\n    const res = rayCaster.intersectObjects(\n      [this.pointCloud], true)\n\n    if (res.length) {\n\n      return this.markups.filter((markup) => {\n\n        const diff = {\n          x: res[0].point.x - markup.point.x,\n          y: res[0].point.y - markup.point.y,\n          z: res[0].point.z - markup.point.z\n        }\n\n        const dist = Math.sqrt(\n          diff.x * diff.x +\n          diff.y * diff.y +\n          diff.z * diff.z)\n\n        return dist < threshold\n      })\n    }\n\n    return []\n  }\n\n  /////////////////////////////////////////////////////////\n  // Occlusion check: return true if markup\n  // is being occluded\n  //\n  /////////////////////////////////////////////////////////\n  checkOcclusion (markup) {\n\n    const clientPoint = this.viewer.worldToClient(\n      markup.point)\n\n    const offset = $(this.viewer.container).offset()\n\n    const rayCaster = this.pointToRaycaster(\n      this.viewer.impl.canvas,\n      this.viewer.impl.camera, {\n        x: clientPoint.x + offset.left,\n        y: clientPoint.y + offset.top\n      })\n\n    const hitTest = this.viewer.model.rayIntersect(\n      rayCaster, true, this.dbIds)\n\n    if (hitTest) {\n\n      if (hitTest.fragId === markup.fragId) {\n\n        const offset = {\n          x: hitTest.point.x - markup.point.x,\n          y: hitTest.point.y - markup.point.y,\n          z: hitTest.point.z - markup.point.z\n        }\n\n        const dist = Math.sqrt(\n          offset.x * offset.x +\n          offset.y * offset.y +\n          offset.z * offset.z)\n\n        if (this.options.logOcclusionDist) {\n          console.log(dist)\n        }\n\n        if (dist < this.options.occlusionDist) {\n          return false\n        }\n      }\n\n      return true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Get list of all dbIds in the model\n  //\n  /////////////////////////////////////////////////////////\n  getAllDbIds () {\n\n    const {instanceTree} = this.viewer.model.getData()\n\n    const {dbIdToIndex} = instanceTree.nodeAccess\n\n    return Object.keys(dbIdToIndex).map((dbId) => {\n\n      return parseInt(dbId)\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Removes everything\n  //\n  /////////////////////////////////////////////////////////\n  destroy () {\n\n    this.viewer.impl.sceneAfter.remove(this.pointCloud)\n\n    this.eventHandlers.forEach((entry) => {\n\n      this.viewer.removeEventListener(\n        entry.event, entry.handler)\n    })\n\n    this.runAnimation = false\n\n    this.markups = []\n\n    this.off ()\n  }\n}\n\n\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.PointCloudMarkup.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.PointCloudMarkup.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/postcss-loader/src/index.js??ref--7-2!../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.PointCloudMarkup.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pointcloud-markup .title {\\n  display: inline-flex;\\n  float: left;\\n  width: 100%; }\\n  .pointcloud-markup .title.markup-controls .switch-container {\\n    margin-right: 8px;\\n    top: 12px; }\\n  .pointcloud-markup .title.markup-controls button {\\n    background: none;\\n    outline: none;\\n    border: none; }\\n    .pointcloud-markup .title.markup-controls button span {\\n      position: relative;\\n      font-size: 23px;\\n      color: #aeaeae;\\n      top: 2px; }\\n      .pointcloud-markup .title.markup-controls button span:hover {\\n        color: orange; }\\n  .pointcloud-markup .title.markup-controls .clear-btn span {\\n    top: 1px; }\\n\\n.pointcloud-markup .title > label {\\n  white-space: nowrap;\\n  font-weight: normal;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px;\\n  width: 100%;\\n  float: left; }\\n\\n.pointcloud-markup .items {\\n  overflow: scroll;\\n  height: 100%; }\\n  .pointcloud-markup .items .item {\\n    transition-timing-function: ease;\\n    transition-duration: 1.5s;\\n    transition-property: all;\\n    transition-delay: 0.0s;\\n    border: 1px solid #aeaeae;\\n    width: calc(100% - 10px);\\n    background: #ededed;\\n    white-space: nowrap;\\n    border-radius: 4px;\\n    overflow: hidden;\\n    cursor: pointer;\\n    height: 28px;\\n    padding: 2px;\\n    margin: 5px; }\\n    .pointcloud-markup .items .item .item-icon {\\n      margin: 1px 2px 0 4px;\\n      height: 20px;\\n      width: 20px;\\n      float: left;\\n      padding: 0; }\\n      .pointcloud-markup .items .item .item-icon div {\\n        background-repeat: no-repeat;\\n        -webkit-transform: rotateX(180deg);\\n                transform: rotateX(180deg);\\n        background-size: contain;\\n        border-radius: 50%;\\n        height: 100%;\\n        width: 100%; }\\n    .pointcloud-markup .items .item .hover-control {\\n      padding: 2px 4px 0 0;\\n      display: none; }\\n    .pointcloud-markup .items .item.active {\\n      background: rgba(0, 115, 255, 0.16);\\n      border: 1px solid #1bb1f4; }\\n    .pointcloud-markup .items .item:hover:not(.active) {\\n      background: rgba(0, 105, 245, 0.2);\\n      border: 1px solid #1bb1f4; }\\n    .pointcloud-markup .items .item:hover .hover-control {\\n      display: block; }\\n    .pointcloud-markup .items .item:hover .label-container {\\n      color: orange; }\\n    .pointcloud-markup .items .item .tooltip-text {\\n      background-color: #ededed !important;\\n      border: 1px solid grey;\\n      color: grey !important;\\n      padding: 4px; }\\n    .pointcloud-markup .items .item .label-container {\\n      width: calc(100% - 76px);\\n      text-align: left;\\n      color: #545454;\\n      float: left;\\n      left: 4px; }\\n    .pointcloud-markup .items .item .remove {\\n      background: none;\\n      outline: none;\\n      float: right;\\n      border: none; }\\n      .pointcloud-markup .items .item .remove span {\\n        position: relative;\\n        margin-right: 4px;\\n        font-size: 22px;\\n        color: #aeaeae;\\n        top: -2px; }\\n        .pointcloud-markup .items .item .remove span:hover {\\n          color: orange; }\\n    .pointcloud-markup .items .item .settings-btn {\\n      background: transparent;\\n      outline: none;\\n      border: none;\\n      height: 24px;\\n      float: right; }\\n      .pointcloud-markup .items .item .settings-btn span {\\n        font-size: 20px;\\n        color: #aeaeae; }\\n        .pointcloud-markup .items .item .settings-btn span:hover {\\n          color: orange; }\\n\\n.pointcloud-markup-item.settings .input-name,\\n.pointcloud-markup.settings .input-name {\\n  border: 1px solid #aeaeae;\\n  width: calc(100% - 80px);\\n  background: #f7f7f7;\\n  position: relative;\\n  padding-left: 4px;\\n  outline: none;\\n  top: -3px; }\\n\\n.pointcloud-markup-item.settings label,\\n.pointcloud-markup.settings label {\\n  width: 80px;\\n  float: left; }\\n\\n.pointcloud-markup-item.settings hr,\\n.pointcloud-markup.settings hr {\\n  width: calc(100% - 52px);\\n  margin: 12px 0 12px 26px;\\n  float: left; }\\n\\n.pointcloud-markup-item.settings .rc-slider,\\n.pointcloud-markup.settings .rc-slider {\\n  float: left; }\\n\\n.pointcloud-markup-item.settings .rc-slider-handle,\\n.pointcloud-markup.settings .rc-slider-handle {\\n  border: solid 2px orange; }\\n\\n.pointcloud-markup-item.settings .rc-slider-track,\\n.pointcloud-markup.settings .rc-slider-track {\\n  background-color: orange; }\\n\\n.pointcloud-markup-item.settings .footer,\\n.pointcloud-markup.settings .footer {\\n  height: 20px;\\n  float: left;\\n  width: 100%; }\\n\\n.pointcloud-tooltip {\\n  transition-timing-function: ease;\\n  transition-property: opacity;\\n  transition-duration: 1.0s;\\n  transition-delay: 0.0s;\\n  position: absolute;\\n  font-weight: bold;\\n  overflow: hidden;\\n  color: orange;\\n  display: none;\\n  height: 20px;\\n  opacity: 0; }\\n\\n.pointcloud-markup-item.settings .switch-container,\\n.pointcloud-markup.settings .switch-container,\\n.pointcloud-markup .switch-container {\\n  border: 1px solid #7a7a7a;\\n  border-radius: 10px;\\n  height: 18px;\\n  float: left; }\\n  .pointcloud-markup-item.settings .switch-container input[type=\\\"checkbox\\\"].switch + div,\\n  .pointcloud-markup.settings .switch-container input[type=\\\"checkbox\\\"].switch + div,\\n  .pointcloud-markup .switch-container input[type=\\\"checkbox\\\"].switch + div {\\n    width: 34px;\\n    height: 16px; }\\n  .pointcloud-markup-item.settings .switch-container input[type=\\\"checkbox\\\"].switch:checked + div,\\n  .pointcloud-markup.settings .switch-container input[type=\\\"checkbox\\\"].switch:checked + div,\\n  .pointcloud-markup .switch-container input[type=\\\"checkbox\\\"].switch:checked + div {\\n    background-color: orange;\\n    width: 34px; }\\n  .pointcloud-markup-item.settings .switch-container input[type=\\\"checkbox\\\"].switch:checked + div > div,\\n  .pointcloud-markup.settings .switch-container input[type=\\\"checkbox\\\"].switch:checked + div > div,\\n  .pointcloud-markup .switch-container input[type=\\\"checkbox\\\"].switch:checked + div > div {\\n    -webkit-transform: translate3d(18px, 0, 0);\\n            transform: translate3d(18px, 0, 0); }\\n  .pointcloud-markup-item.settings .switch-container input[type=\\\"checkbox\\\"].switch + div > div,\\n  .pointcloud-markup.settings .switch-container input[type=\\\"checkbox\\\"].switch + div > div,\\n  .pointcloud-markup .switch-container input[type=\\\"checkbox\\\"].switch + div > div {\\n    height: 16px;\\n    width: 16px;\\n    margin: 0; }\\n\\n.color-picker-dlg {\\n  width: 227px !important; }\\n  .color-picker-dlg .content {\\n    padding: 0 !important; }\\n\\n.pointcloud-markup-tooltip {\\n  height: 100%; }\\n  .pointcloud-markup-tooltip img {\\n    height: calc(100% - 50px);\\n    width: calc(100% - 0px);\\n    padding: 4px; }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}